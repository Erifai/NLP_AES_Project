Doing: take all data as if it belongs to one large dataset, and do classification
Mega classification for:  pos  features
2267 2267 2267 942
Distribution of labels: 
Counter({'B1': 890, 'A2': 875, 'B2': 374, 'A1': 86, 'C1': 42})
Printing results for: RandomForestClassifier(class_weight='balanced', n_estimators=300,
                       random_state=1234)CountVectorizer(min_df=10, ngram_range=(1, 5))
13275
13275
[0.47136564 0.69603524 0.64757709 0.64757709 0.88546256 0.89867841
 0.77973568 0.65486726 0.59292035 0.68141593]
0.6955635257884681 0.6814647854914929
[[ 18  67   1   0   0   0]
 [ 15 723 135   2   0   0]
 [  0 217 545 128   0   0]
 [  0   6  77 291   0   0]
 [  0   0   0  42   0   0]
 [  0   0   0   0   0   0]]
Printing results for: LinearSVC(class_weight='balanced', random_state=1234)CountVectorizer(min_df=10, ngram_range=(1, 5))
13275
13275
[0.40528634 0.45814978 0.46255507 0.52863436 0.74889868 0.70044053
 0.66079295 0.54867257 0.47345133 0.53539823]
0.5522279833144907 0.5489922497272042
[[ 21  60   5   0   0   0]
 [ 77 571 208  18   1   0]
 [  1 324 444 119   2   0]
 [  0  24 123 213  14   0]
 [  0   1   6  32   3   0]
 [  0   0   0   0   0   0]]
Printing results for: LogisticRegression(class_weight='balanced', random_state=1234)CountVectorizer(min_df=10, ngram_range=(1, 5))
13275
13275
[0.41409692 0.54625551 0.52422907 0.5154185  0.80176211 0.72246696
 0.65198238 0.55752212 0.49557522 0.60176991]
0.5831078710381661 0.5816823166705348
[[ 22  57   5   1   1   0]
 [ 63 574 211  26   1   0]
 [  3 275 495 114   3   0]
 [  0  10 111 228  25   0]
 [  0   0   2  37   3   0]
 [  0   0   0   0   0   0]]
SAME LANG EVAL DONE FOR THIS LANG
